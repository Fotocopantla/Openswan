./cryptoR2 ike_alg_register_enc(): Activating OAKLEY_AES_CBC: Ok (ret=0)
./cryptoR2 ike_alg_register_hash(): Activating OAKLEY_SHA2_512: Ok (ret=0)
./cryptoR2 ike_alg_register_hash(): Activating OAKLEY_SHA2_256: Ok (ret=0)
./cryptoR2 ike_alg_register_prf(): Activating prf-hmac-sha2-256: Ok (ret=0)
./cryptoR2 loading secrets from "../../libpluto/samples/jj.secrets"
./cryptoR2 loaded private key for keyid: PPK_RSA:AQOg5H7A4/2A3A 92D4 E0FA 5CD7 8DE1 D133 0C62 6985 2B6E D701
| processing whack message of size: A
| processing whack message of size: A
processing whack msg time: X size: Y
./cryptoR2 loaded key: 2A3A 92D4 E0FA 5CD7 8DE1 D133 0C62 6985 2B6E D701
| processing whack message of size: A
processing whack msg time: X size: Y
./cryptoR2 loaded key: 66A6 7046 BBAB E28F 310E C6C0 80EC 790E F556 2AB9
| processing whack message of size: A
processing whack msg time: X size: Y
| Added new connection parker1--jj2 with policy RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK
./cryptoR2 use keyid: 1:2A3A 92D4 E0FA 5CD7 8DE1 D133 0C62 6985 2B6E D701 / 2:<>
| counting wild cards for @jamesjohnson.emmjay.credil.org is 0
./cryptoR2 use keyid: 1:66A6 7046 BBAB E28F 310E C6C0 80EC 790E F556 2AB9 / 2:<>
| counting wild cards for @parker01.emmjay.credil.org is 0
| orient parker1--jj2 checking against if: eth0 (AF_INET:132.213.238.7:4500)
| orient parker1--jj2 checking against if: eth0 (AF_INET:132.213.238.7:500)
|     orient matched on IP
|   orient parker1--jj2 finished with: 1 [132.213.238.7]
| find_host_pair: looking for me=132.213.238.7:500 %address him=192.168.1.1:500 exact-match
| find_host_pair: concluded with <none>
| connect_to_host_pair: 132.213.238.7:500 %address 192.168.1.1:500 -> hp:none
| find_ID_host_pair: looking for me=@jamesjohnson.emmjay.credil.org him=@parker01.emmjay.credil.org (exact)
|   concluded with <none>
./cryptoR2 adding connection: "parker1--jj2"
| fd68:c9f9:4157::/64===132.213.238.7[@jamesjohnson.emmjay.credil.org]...192.168.1.1[@parker01.emmjay.credil.org]===fd68:c9f9:4157:2:0:1::/96
| ike_life: 3600s; ipsec_life: 28800s; rekey_margin: 540s; rekey_fuzz: 100%; keyingtries: 0; policy: RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK
|   orient parker1--jj2 finished with: 1 [132.213.238.7]
RC=0 "parker1--jj2": fd68:c9f9:4157::/64===132.213.238.7[@jamesjohnson.emmjay.credil.org]...192.168.1.1[@parker01.emmjay.credil.org]===fd68:c9f9:4157:2:0:1::/96; unrouted; eroute owner: #0
RC=0 "parker1--jj2":     myip=unset; hisip=unset;
RC=0 "parker1--jj2":   keys: 1:2A3A 92D4 E0FA 5CD7 8DE1 D133 0C62 6985 2B6E D701 2:none...
RC=0 "parker1--jj2":        ....1:66A6 7046 BBAB E28F 310E C6C0 80EC 790E F556 2AB9 2:none
RC=0 "parker1--jj2":   ike_life: 3600s; ipsec_life: 28800s; rekey_margin: 540s; rekey_fuzz: 100%; keyingtries: 0
RC=0 "parker1--jj2":   policy: RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK; prio: 64,96; interface: eth0; kind=CK_PERMANENT
0: input from parentI1.pcap
|   =========== input from from parentI1.pcap ========
| *received 628 bytes from 192.168.1.1:500 on eth0 (port=500)
|   80 01 02 03  04 05 06 07  00 00 00 00  00 00 00 00
|   21 20 22 08  00 00 00 00  00 00 02 74  22 00 00 f4
|   02 00 00 28  01 01 00 04  03 00 00 08  01 00 00 0c
|   03 00 00 08  02 00 00 05  03 00 00 08  03 00 00 0c
|   00 00 00 08  04 00 00 0e  02 00 00 28  02 01 00 04
|   03 00 00 08  01 00 00 0c  03 00 00 08  02 00 00 05
|   03 00 00 08  03 00 00 02  00 00 00 08  04 00 00 0e
|   02 00 00 28  03 01 00 04  03 00 00 08  01 00 00 0c
|   03 00 00 08  02 00 00 05  03 00 00 08  03 00 00 0c
|   00 00 00 08  04 00 00 05  02 00 00 28  04 01 00 04
|   03 00 00 08  01 00 00 0c  03 00 00 08  02 00 00 05
|   03 00 00 08  03 00 00 02  00 00 00 08  04 00 00 05
|   02 00 00 28  05 01 00 04  03 00 00 08  01 00 00 0c
|   03 00 00 08  02 00 00 05  03 00 00 08  03 00 00 0c
|   00 00 00 08  04 00 00 0f  00 00 00 28  06 01 00 04
|   03 00 00 08  01 00 00 0c  03 00 00 08  02 00 00 05
|   03 00 00 08  03 00 00 02  00 00 00 08  04 00 00 0f
|   28 00 01 08  00 0e 00 00  3d a6 6a 81  e2 92 09 be
|   18 4f a0 1e  5c ed ea 7c  7d 7b 3a 21  3e 15 0d 53
|   5d 17 6a be  1b c5 70 ab  34 47 bc 09  14 7c aa 91
|   9c 8f 81 dc  1e f9 87 cd  6a ec fa f3  a5 9e 37 bc
|   ac 3d fd e1  32 8e e8 b3  fe d3 8b f4  7b 50 34 13
|   33 7a 93 ea  e9 3c 0e 8b  bd 48 18 9c  9e 03 70 f2
|   55 ce 45 22  9f c7 c9 48  43 a3 e2 64  b5 5d 43 38
|   c8 fe f1 d3  06 43 f0 0a  e8 6d 61 8c  60 78 d9 98
|   d3 1b 3b 5e  f5 a6 e8 2f  ef 56 ac b4  33 bd 1e 62
|   b2 3e 0b 17  af 6c b8 31  08 d7 19 5a  7b c4 54 c2
|   13 47 98 c2  cc d2 16 29  75 6c 03 fb  1e 9c 9d 21
|   0c a1 e6 c2  f3 f2 49 2c  f6 06 73 c1  96 1e ce 58
|   81 01 1c cb  16 dc f9 fc  c7 93 08 75  58 16 57 71
|   69 96 66 b7  a9 81 7f f7  37 4d 7c 41  38 62 a6 39
|   00 81 ca 3d  1d fc f7 b5  08 38 d4 34  70 22 6c 21
|   d2 5b 20 a1  d2 ba 2a d1  89 f3 20 79  ce ac 1e c2
|   ec 7d ae 76  94 40 39 a0  29 00 00 14  20 98 9d 37
|   a8 14 a6 4d  8f f0 7c 08  d3 20 e9 e3  29 00 00 1c
|   00 00 40 04  ea 59 1e 1b  30 a3 e0 94  4c dc 91 5b
|   b0 95 3c 48  70 73 62 f1  2b 00 00 1c  00 00 40 05
|   cd bc 1b 74  02 d7 5e 4c  da 5b cd 1c  a1 08 87 2b
|   f9 7d c4 c2  00 00 00 10  4f 45 70 6c  75 74 6f 75
|   6e 69 74 30
|  processing version=2.0 packet with exchange type=ISAKMP_v2_SA_INIT (34), msgid: 00000000
| I am IKE SA Responder
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  00 00 00 00  00 00 00 00
| state hash entry 4
| v2 state object not found
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  00 00 00 00  00 00 00 00
| state hash entry 4
| v2 state object not found
| considering state entry: 0
|   reject:state needed and state unavailable
| considering state entry: 1
|   reject:state needed and state unavailable
| considering state entry: 2
|   reject:state needed and state unavailable
| considering state entry: 3
| now proceed with state specific processing using state #3 responder-V2_init
| find_host_connection2 called from ikev2parent_inI1outR1, me=132.213.238.7:500 him=192.168.1.1:500 policy=IKEv2ALLOW/-
| find_host_pair: looking for me=132.213.238.7:500 %address him=192.168.1.1:500 any-match
| find_host_pair: comparing to me=132.213.238.7:500 %address him=192.168.1.1:500
| find_host_pair: concluded with parker1--jj2
| found_host_pair_conn (find_host_connection2): 132.213.238.7:500 %address/192.168.1.1:500 -> hp:parker1--jj2
| searching for connection with policy = IKEv2ALLOW/-
| found policy = RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK (parker1--jj2)
| find_host_connection2 returns parker1--jj2 (ike=none/none)
./cryptoR2 tentatively considering connection: parker1--jj2
| creating state object #1 at Z
| orient parker1--jj2 checking against if: eth0 (AF_INET:132.213.238.7:4500)
| orient parker1--jj2 checking against if: eth0 (AF_INET:132.213.238.7:500)
|     orient matched on IP
|   orient parker1--jj2 finished with: 1 [132.213.238.7]
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| inserting state object #1 bucket: 28
| will not send/process a dcookie
| received a notify..
./cryptoR2 transition from state STATE_IKEv2_START to state STATE_PARENT_R1
./cryptoR2 STATE_PARENT_R1: received v2I1, sent v2R1 (msgid: 00000000/00000000)
sending 176 bytes for STATE_IKEv2_START through eth0:500 [132.213.238.7:500] to 192.168.1.1:500 (using #1)
|   80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   21 20 22 20  00 00 00 00  00 00 00 b0  22 00 00 30
|   00 00 00 2c  01 01 00 04  03 00 00 0c  01 00 00 0c
|   80 0e 00 80  03 00 00 08  03 00 00 0c  03 00 00 08
|   02 00 00 05  00 00 00 08  04 00 00 0e  28 00 00 08
|   00 0e 00 00  29 00 00 14  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  29 00 00 1c  00 00 40 04
|   1d 77 eb e3  db b6 db 7c  4b b5 ef 4b  57 c6 f1 b8
|   ec 7e 9b fe  2b 00 00 1c  00 00 40 05  81 b5 74 15
|   c4 1e 64 b8  4c 1a 4e 9c  14 92 f7 ab  25 31 bf 62
|   00 00 00 10  4f 45 70 6c  75 74 6f 75  6e 69 74 30
1: output to OUTPUT/cryptoR2.pcap
1: input from parentI2.pcap
|   =========== input from from parentI2.pcap ========
| *received 528 bytes from 192.168.1.1:500 on eth0 (port=500)
|   80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   2e 20 23 08  00 00 00 01  00 00 02 10  23 00 01 f4
|   80 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
|   bc 35 37 b7  f3 29 8d 7f  0e 4a 2b b3  5d 29 2d b7
|   23 65 2e b5  89 be 6c b5  1e a6 e8 51  7b 82 bc 62
|   52 65 9c 5a  42 99 59 9d  56 b5 91 af  22 ac 32 85
|   8e d3 93 41  47 3b 34 5f  65 12 ca 49  91 8c 08 fc
|   73 97 ca 7f  e0 83 88 1b  a2 c1 04 65  bf e0 a2 10
|   b2 ee a1 7b  04 c5 76 eb  32 f9 14 56  df 9d b2 76
|   2b 36 af e0  fe 51 2d 3d  df 2e 14 51  dc 63 90 5d
|   77 8e 9a 94  c5 39 36 bd  f4 8f b5 f9  f2 bd 28 af
|   a7 cc 0b 02  31 6b df c2  56 4f e2 0f  c4 e7 71 c1
|   71 b9 a7 8e  51 13 2f 38  7a bd 17 7d  52 79 3d 82
|   f9 b6 03 5b  9d c7 01 c2  e9 d6 f6 fb  75 f7 3f 93
|   fe 55 cc 8f  87 84 22 98  0e e0 84 23  fa fb b6 77
|   e4 9b 49 82  0b fd bc 3f  45 3b 2c f0  70 b6 38 09
|   4f a7 fb e6  7f a0 71 bb  84 cf 26 d9  06 e2 0a 13
|   0d 3b 68 44  ad 45 89 ef  54 22 87 86  e5 a6 3e 3a
|   31 f2 63 55  27 65 44 a9  d0 97 32 cc  fa 47 86 9a
|   fc 90 58 c8  aa f6 f8 96  79 8a 21 43  60 ab a1 2a
|   65 07 55 6e  2e 43 5b 61  0e 54 5c 15  c5 55 31 9c
|   d4 30 87 01  17 50 9f 32  a0 2e a0 72  4b 76 02 09
|   ee ad 35 13  ec b9 56 a7  fa d2 4a 6b  18 85 4f 80
|   a8 eb 22 67  7d ac 86 0c  2a cd 23 c6  d6 81 be 11
|   a0 2a 56 c2  58 e4 30 cc  f3 f1 e8 fc  dc ac 3c 26
|   ae 57 f8 b9  a5 95 a9 13  49 3b 9c d3  38 e1 26 85
|   b2 80 eb f5  53 80 f3 fe  58 21 df 66  41 5d 70 f7
|   3a a0 18 f0  1a 74 e3 cb  43 95 5a 70  7a c5 17 63
|   71 ec e1 e6  cf ec a4 47  cd 9e df 33  4b 6d 61 93
|   d4 65 96 4b  4e 85 e2 f9  24 63 df 73  1b d6 20 33
|   ed 47 fd 50  b2 21 6d 1b  f3 2b 38 c6  9f 81 fa ca
|   2d dd 9e 43  2d ee 5e 33  50 bd 5f b8  bb 3b 40 77
|   bf ff 2b 6c  59 a7 c5 c4  ad 5e 21 b3  c0 61 6f bd
|  processing version=2.0 packet with exchange type=ISAKMP_v2_AUTH (35), msgid: 00000001
| I am IKE SA Responder
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| v2 state object not found
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| v2 peer and cookies match on #1
| v2 state object #1 (parker1--jj2) found, in STATE_PARENT_R1
| state found and its state is:STATE_PARENT_R1 msgid: 00001
| considering state entry: 0
|   reject: in state: STATE_PARENT_R1, needs STATE_PARENT_I1
| considering state entry: 1
|   reject: in state: STATE_PARENT_R1, needs STATE_PARENT_I1
| considering state entry: 2
|   reject: in state: STATE_PARENT_R1, needs STATE_CHILD_C0_KEYING
| considering state entry: 3
|   reject:state unneeded and state available
| considering state entry: 4
| now proceed with state specific processing using state #4 responder-auth-process
| ikev2 parent inI2outR2: calculating g^{xy} in order to decrypt I2
./cryptoR2 IKEv2 mode peer ID is ID_FQDN: '@parker01.emmjay.credil.org'
| find_ID_host_pair: looking for me=(none) him=@parker01.emmjay.credil.org (wildcard)
|                   comparing to me=@jamesjohnson.emmjay.credil.org him=@parker01.emmjay.credil.org (parker1--jj2)
|   concluded with parker1--jj2
| idhash verify pi  cc 07 97 44  b4 a3 4e 8a  0d 2f 27 8b  ee 06 6d 07
|   a5 a5 75 2e
| idhash verify I2  02 00 00 00  70 61 72 6b  65 72 30 31  2e 65 6d 6d
|   6a 61 79 2e  63 72 65 64  69 6c 2e 6f  72 67
| inputs to hash1 (first packet)
|   80 01 02 03  04 05 06 07  00 00 00 00  00 00 00 00
|   21 20 22 08  00 00 00 00  00 00 02 74  22 00 00 f4
|   02 00 00 28  01 01 00 04  03 00 00 08  01 00 00 0c
|   03 00 00 08  02 00 00 05  03 00 00 08  03 00 00 0c
|   00 00 00 08  04 00 00 0e  02 00 00 28  02 01 00 04
|   03 00 00 08  01 00 00 0c  03 00 00 08  02 00 00 05
|   03 00 00 08  03 00 00 02  00 00 00 08  04 00 00 0e
|   02 00 00 28  03 01 00 04  03 00 00 08  01 00 00 0c
|   03 00 00 08  02 00 00 05  03 00 00 08  03 00 00 0c
|   00 00 00 08  04 00 00 05  02 00 00 28  04 01 00 04
|   03 00 00 08  01 00 00 0c  03 00 00 08  02 00 00 05
|   03 00 00 08  03 00 00 02  00 00 00 08  04 00 00 05
|   02 00 00 28  05 01 00 04  03 00 00 08  01 00 00 0c
|   03 00 00 08  02 00 00 05  03 00 00 08  03 00 00 0c
|   00 00 00 08  04 00 00 0f  00 00 00 28  06 01 00 04
|   03 00 00 08  01 00 00 0c  03 00 00 08  02 00 00 05
|   03 00 00 08  03 00 00 02  00 00 00 08  04 00 00 0f
|   28 00 01 08  00 0e 00 00  3d a6 6a 81  e2 92 09 be
|   18 4f a0 1e  5c ed ea 7c  7d 7b 3a 21  3e 15 0d 53
|   5d 17 6a be  1b c5 70 ab  34 47 bc 09  14 7c aa 91
|   9c 8f 81 dc  1e f9 87 cd  6a ec fa f3  a5 9e 37 bc
|   ac 3d fd e1  32 8e e8 b3  fe d3 8b f4  7b 50 34 13
|   33 7a 93 ea  e9 3c 0e 8b  bd 48 18 9c  9e 03 70 f2
|   55 ce 45 22  9f c7 c9 48  43 a3 e2 64  b5 5d 43 38
|   c8 fe f1 d3  06 43 f0 0a  e8 6d 61 8c  60 78 d9 98
|   d3 1b 3b 5e  f5 a6 e8 2f  ef 56 ac b4  33 bd 1e 62
|   b2 3e 0b 17  af 6c b8 31  08 d7 19 5a  7b c4 54 c2
|   13 47 98 c2  cc d2 16 29  75 6c 03 fb  1e 9c 9d 21
|   0c a1 e6 c2  f3 f2 49 2c  f6 06 73 c1  96 1e ce 58
|   81 01 1c cb  16 dc f9 fc  c7 93 08 75  58 16 57 71
|   69 96 66 b7  a9 81 7f f7  37 4d 7c 41  38 62 a6 39
|   00 81 ca 3d  1d fc f7 b5  08 38 d4 34  70 22 6c 21
|   d2 5b 20 a1  d2 ba 2a d1  89 f3 20 79  ce ac 1e c2
|   ec 7d ae 76  94 40 39 a0  29 00 00 14  20 98 9d 37
|   a8 14 a6 4d  8f f0 7c 08  d3 20 e9 e3  29 00 00 1c
|   00 00 40 04  ea 59 1e 1b  30 a3 e0 94  4c dc 91 5b
|   b0 95 3c 48  70 73 62 f1  2b 00 00 1c  00 00 40 05
|   cd bc 1b 74  02 d7 5e 4c  da 5b cd 1c  a1 08 87 2b
|   f9 7d c4 c2  00 00 00 10  4f 45 70 6c  75 74 6f 75
|   6e 69 74 30
| inputs to hash2 (responder nonce)
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
| idhash  21 c9 c7 8a  23 af 45 1b  6e 00 8c ba  c3 68 04 9b
|   ac 3f 06 c6  e0 ac a1 ca  43 98 de f3  12 5f ad bc
| v2rsa calculated octets
|   b2 7f 24 05  83 dd 32 0b  41 69 44 66  ea c1 f6 eb
|   38 74 76 93
| IKEv2 Authentication Payload
|   21 00 01 08  01 00 00 00
| required CA is '%any'
| key issuer CA is '%any'
| PARENT SA now authenticated, building child and reply
| **emit ISAKMP Message:
|    initiator cookie:
|   80 01 02 03  04 05 06 07
|    responder cookie:
|   de bc 58 3a  8f 40 d0 cf
|    ISAKMP version: IKEv2 version 2.0 (rfc4306/rfc5996)
|    exchange type: ISAKMP_v2_AUTH
|    flags: ISAKMP_FLAG_RESPONSE
|    message ID:  00 00 00 01
|    next-payload: ISAKMP_NEXT_v2E [@16=0x2e]
| ***emit IKEv2 Encryption Payload:
|    critical bit: none
| emitting 16 zero bytes of iv into IKEv2 Encryption Payload
| IKEv2 thinking whether to send my certificate:
|  my policy has  RSASIG, the policy is : RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK
|  sendcert: CERT_SENDIFASKED and I did not get a certificate request
|  so do not send cert.
| I did not send a certificate because I do not have one.
|    next-payload: ISAKMP_NEXT_v2IDr [@-20=0x24]
| *****emit IKEv2 Identification Payload:
|    critical bit: none
|    id_type: ID_FQDN
| emitting 30 raw bytes of my identity into IKEv2 Identification Payload
| my identity  6a 61 6d 65  73 6a 6f 68  6e 73 6f 6e  2e 65 6d 6d
|   6a 61 79 2e  63 72 65 64  69 6c 2e 6f  72 67
| emitting length of IKEv2 Identification Payload: 38
| idhash calc pr  e9 00 11 7e  41 d4 31 62  40 b8 63 22  bf 06 9f bc
|   eb 81 58 e7
| idhash calc R2  02 00 00 00  6a 61 6d 65  73 6a 6f 68  6e 73 6f 6e
|   2e 65 6d 6d  6a 61 79 2e  63 72 65 64  69 6c 2e 6f
|   72 67
| assembled IDr payload -- CERT next
| CHILD SA proposals received
| going to assemble AUTH payload
|    next-payload: ISAKMP_NEXT_v2AUTH [@0=0x27]
| *****emit IKEv2 Authentication Payload:
|    critical bit: none
|    auth method: v2_AUTH_RSA
| emitting 192 zero bytes of fake rsa sig into IKEv2 Authentication Payload
| emitting length of IKEv2 Authentication Payload: 200
| ***parse IKEv2 Traffic Selector:
|    TS type: IKEv2_TS_IPV6_ADDR_RANGE
|    IP Protocol ID: 0
|    length: 40
|    start port: 0
|    end port: 65535
| parsing 16 raw bytes of IKEv2 Traffic Selector into ipv6 ts
| ipv6 ts  fd 68 c9 f9  41 57 00 02  00 00 00 01  00 00 00 00
| parsing 16 raw bytes of IKEv2 Traffic Selector into ipv6 ts
| ipv6 ts  fd 68 c9 f9  41 57 00 02  00 00 00 01  ff ff ff ff
| ***parse IKEv2 Traffic Selector:
|    TS type: IKEv2_TS_IPV6_ADDR_RANGE
|    IP Protocol ID: 0
|    length: 40
|    start port: 0
|    end port: 65535
| parsing 16 raw bytes of IKEv2 Traffic Selector into ipv6 ts
| ipv6 ts  fd 68 c9 f9  41 57 00 00  00 00 00 00  00 00 00 00
| parsing 16 raw bytes of IKEv2 Traffic Selector into ipv6 ts
| ipv6 ts  fd 68 c9 f9  41 57 00 00  ff ff ff ff  ff ff ff ff
| ikev2_evaluate_connection_fit, evaluating base fit for parker1--jj2
|   ikev2_evaluate_connection_fit evaluating our I=parker1--jj2:fd68:c9f9:4157:2:0:1::/96:0/0 R=fd68:c9f9:4157::/64:0/0  to their:
|     tsi[0]=fd68:c9f9:4157:2:0:1::/fd68:c9f9:4157:2:0:1:ffff:ffff proto=0 portrange 0-65535, tsr[0]=fd68:c9f9:4157::/fd68:c9f9:4157:0:ffff:ffff:ffff:ffff proto=0 portrange 0-65535
| ei->port 0  tsi[tsi_ni].startport 0  tsi[tsi_ni].endport 65535
|       has ts_range1=32 maskbits1=96 ts_range2=64 maskbits2=64 fitbits=32896 <> -1
| bfit_n=ikev2_evaluate_connection_fit found better fit c parker1--jj2
|     evaluate_connection_port_fit tsi_n[1], best=-1
|    tsi[0] 0-65535: exact port match with 0.  fitness 65536
|       evaluating_connection_port_fit tsi_n[0], range_i=65536 best=-1
|    tsr[0] 0-65535: exact port match with 0.  fitness 65536
|       evaluating_connection_port_fit tsi_n[0] tsr_n[0], range=65536/65536 best=-1
|     best ports fit so far: tsi[0] fitrange_i 65536, tsr[0] fitrange_r 65536, matchiness 131072
|     port_fitness 131072
| ikev2_evaluate_connection_port_fit found better fit c parker1--jj2, tsi[0],tsr[0]
| find_ID_host_pair: looking for me=@jamesjohnson.emmjay.credil.org him=@parker01.emmjay.credil.org (wildcard)
|                   comparing to me=@jamesjohnson.emmjay.credil.org him=@parker01.emmjay.credil.org (parker1--jj2)
|   concluded with parker1--jj2
|   checking hostpair fd68:c9f9:4157::/64 -> fd68:c9f9:4157:2:0:1::/96 is found
| ikev2_evaluate_connection_fit, concluded with parker1--jj2
| duplicating state object #1
| creating state object #2 at Z
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| inserting state object #2 bucket: 28
| printing contents struct traffic_selector
|   ts_type: IKEv2_TS_IPV6_ADDR_RANGE
|   ipprotoid: 0
|   startport: 0
|   endport: 65535
|   ip low: fd68:c9f9:4157::
|   ip high: fd68:c9f9:4157:0:ffff:ffff:ffff:ffff
| printing contents struct traffic_selector
|   ts_type: IKEv2_TS_IPV6_ADDR_RANGE
|   ipprotoid: 0
|   startport: 0
|   endport: 65535
|   ip low: fd68:c9f9:4157:2:0:1::
|   ip high: fd68:c9f9:4157:2:0:1:ffff:ffff
|    next-payload: ISAKMP_NEXT_v2SA [@38=0x21]
| *****emit IKEv2 Security Association Payload:
|    critical bit: none
| __alg_info_esp_add() ealg=12 aalg=12 cnt=1
| __alg_info_esp_add() ealg=12 aalg=2 cnt=2
| ***parse IKEv2 Proposal Substructure Payload:
|    length: 32
|    prop #: 1
|    proto ID: 3
|    spi size: 4
|    # transforms: 2
| parsing 4 raw bytes of IKEv2 Proposal Substructure Payload into CHILD SA SPI
| CHILD SA SPI  12 34 56 78
| SPI received: 12345678
| ****parse IKEv2 Transform Substructure Payload:
|    length: 8
|    transform type: 1
|    transform ID: 12
| collect encr: 12<=1 integ: 0<=0 prf: 0<=0 dh: 0<=0
| ****parse IKEv2 Transform Substructure Payload:
|    length: 12
|    transform type: 3
|    transform ID: 12
| *****parse IKEv2 Attribute Substructure Payload:
|    af+type: KEY_LENGTH
|    length/value: 128
| collect encr: 12<=1 integ: 12<=1 prf: 0<=0 dh: 0<=0
| ***parse IKEv2 Proposal Substructure Payload:
|    length: 32
|    prop #: 2
|    proto ID: 3
|    spi size: 4
|    # transforms: 2
| parsing 4 raw bytes of IKEv2 Proposal Substructure Payload into CHILD SA SPI
| CHILD SA SPI  12 34 56 78
| SPI received: 12345678
| ******emit IKEv2 Proposal Substructure Payload:
|    prop #: 1
|    proto ID: 3
|    spi size: 4
|    # transforms: 3
| emitting 4 raw bytes of our spi into IKEv2 Proposal Substructure Payload
| our spi  12 34 56 78
| *******emit IKEv2 Transform Substructure Payload:
|    transform type: 1
|    transform ID: 12
| ********emit IKEv2 Attribute Substructure Payload:
|    af+type: KEY_LENGTH
|    length/value: 128
|     [128 is 128??]
| emitting length of IKEv2 Transform Substructure Payload: 12
| *******emit IKEv2 Transform Substructure Payload:
|    transform type: 3
|    transform ID: 12
| emitting length of IKEv2 Transform Substructure Payload: 8
| *******emit IKEv2 Transform Substructure Payload:
|    transform type: 5
|    transform ID: 0
| emitting length of IKEv2 Transform Substructure Payload: 8
| emitting length of IKEv2 Proposal Substructure Payload: 40
| emitting length of IKEv2 Security Association Payload: 44
|    next-payload: ISAKMP_NEXT_v2TSi [@238=0x2c]
| *****emit IKEv2 Traffic Selector Payload:
|    critical bit: none
|    number of TS: 1
| ******emit IKEv2 Traffic Selector:
|    TS type: IKEv2_TS_IPV6_ADDR_RANGE
|    IP Protocol ID: 0
|    start port: 0
|    end port: 65535
| emitting 16 raw bytes of ipv6 low into IKEv2 Traffic Selector
| ipv6 low  fd 68 c9 f9  41 57 00 02  00 00 00 01  00 00 00 00
| emitting 16 raw bytes of ipv6 high into IKEv2 Traffic Selector
| ipv6 high  fd 68 c9 f9  41 57 00 02  00 00 00 01  ff ff ff ff
| emitting length of IKEv2 Traffic Selector: 40
| emitting length of IKEv2 Traffic Selector Payload: 48
|    next-payload: ISAKMP_NEXT_v2TSr [@282=0x2d]
| *****emit IKEv2 Traffic Selector Payload:
|    critical bit: none
|    number of TS: 1
| ******emit IKEv2 Traffic Selector:
|    TS type: IKEv2_TS_IPV6_ADDR_RANGE
|    IP Protocol ID: 0
|    start port: 0
|    end port: 65535
| emitting 16 raw bytes of ipv6 low into IKEv2 Traffic Selector
| ipv6 low  fd 68 c9 f9  41 57 00 00  00 00 00 00  00 00 00 00
| emitting 16 raw bytes of ipv6 high into IKEv2 Traffic Selector
| ipv6 high  fd 68 c9 f9  41 57 00 00  ff ff ff ff  ff ff ff ff
| emitting length of IKEv2 Traffic Selector: 40
| emitting length of IKEv2 Traffic Selector Payload: 48
| prf+[1]:  d4 e5 d8 b8  c5 be c0 f0  2c 72 22 9a  3f d1 6b 3f
|   76 47 d0 21
| prf+[2]:  1d e2 76 c7  d6 a6 95 24  45 9d 94 68  e5 86 a5 7d
|   e5 a2 57 da
| prf+[3]:  6f 9f b7 fb  c1 28 40 5d  15 cd 4d 03  47 77 35 3a
|   d2 31 9f c2
| prf+[4]:  f6 73 d9 f9  01 4d 19 c4  a1 80 37 fc  1b d5 b3 7e
|   f1 ae 06 1a
| prf+[5]:  2a 38 9f d4  35 4f c5 d2  f0 1b 05 23  41 c1 5c c3
|   64 f2 03 65
| our  keymat  d4 e5 d8 b8  c5 be c0 f0  2c 72 22 9a  3f d1 6b 3f
|   76 47 d0 21  1d e2 76 c7  d6 a6 95 24  45 9d 94 68
|   e5 86 a5 7d  e5 a2 57 da  6f 9f b7 fb  c1 28 40 5d
| peer keymat  15 cd 4d 03  47 77 35 3a  d2 31 9f c2  f6 73 d9 f9
|   01 4d 19 c4  a1 80 37 fc  1b d5 b3 7e  f1 ae 06 1a
|   2a 38 9f d4  35 4f c5 d2  f0 1b 05 23  41 c1 5c c3
| emitting 6 raw bytes of padding and length into cleartext
| padding and length  00 01 02 03  04 05
| emitting 16 zero bytes of length of truncated HMAC into IKEv2 Encryption Payload
| emitting length of IKEv2 Encryption Payload: 420
| emitting length of ISAKMP Message: 448
| data before encryption:
|   27 00 00 26  02 00 00 00  6a 61 6d 65  73 6a 6f 68
|   6e 73 6f 6e  2e 65 6d 6d  6a 61 79 2e  63 72 65 64
|   69 6c 2e 6f  72 67 21 00  00 c8 01 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 2c 00
|   00 2c 00 00  00 28 01 03  04 03 12 34  56 78 03 00
|   00 0c 01 00  00 0c 80 0e  00 80 03 00  00 08 03 00
|   00 0c 00 00  00 08 05 00  00 00 2d 00  00 30 01 00
|   00 00 08 00  00 28 00 00  ff ff fd 68  c9 f9 41 57
|   00 02 00 00  00 01 00 00  00 00 fd 68  c9 f9 41 57
|   00 02 00 00  00 01 ff ff  ff ff 00 00  00 30 01 00
|   00 00 08 00  00 28 00 00  ff ff fd 68  c9 f9 41 57
|   00 00 00 00  00 00 00 00  00 00 fd 68  c9 f9 41 57
|   00 00 ff ff  ff ff ff ff  ff ff 00 01  02 03 04 05
| data after encryption:
|   eb ff 97 78  70 72 7e b3  64 db c7 fe  e4 69 0f 92
|   2a dd bb d8  41 fc d0 3e  5c 5a 07 57  fd e7 7d 8a
|   c1 fc 19 db  f7 a0 0a 58  95 e0 43 74  1f 5e e0 33
|   f2 06 29 c9  8d 3e 52 00  37 22 20 6c  47 af 94 1c
|   6a 93 b3 97  1f ff 5c 1b  70 b3 48 6a  c7 5f 27 b3
|   e4 bf e1 17  0e 15 c1 47  77 7b 53 88  6c 4a cb 12
|   d0 82 94 13  cf 66 cc 4c  d8 b2 8e c1  39 07 b9 a5
|   12 f6 e0 69  cb ad 11 c1  e9 58 33 21  a8 bb a9 ec
|   40 9e ba 01  5c 8d e8 04  ac b9 22 b2  c6 ce c8 a9
|   79 a2 02 52  da d8 f7 41  ae 9c 82 85  5f f2 f5 a3
|   3f f7 09 de  d6 e7 31 43  51 69 8f 8d  fa 0b 41 e6
|   d8 07 00 68  9e b7 92 3d  47 93 37 e6  14 e0 48 0d
|   bb 1d 13 08  66 5d 87 c4  86 8a 38 f3  05 57 97 5c
|   e1 dc 5c ac  36 b4 e1 93  68 57 da 98  6c 69 99 c3
|   2a b8 60 09  8f 1f d2 d0  27 0b e5 b8  bf 6b e2 83
|   5d af f9 88  7c 09 47 32  c7 c7 72 61  b0 29 20 0b
|   a1 79 22 95  8b 5f 46 ab  30 48 6c 4f  21 93 99 84
|   a4 de 9a eb  10 24 61 19  27 da 8a 9b  ff 3f 7f 85
|   a9 c0 18 f9  23 6d e0 32  33 ca 20 5b  5c dc 26 0c
|   66 92 c6 6b  e1 c9 ee ff  d8 d0 41 97  7e b6 6e be
|   af f6 9e 38  bd 3e 93 ae  c9 73 2e 3e  f5 ed 42 24
|   f6 4f a7 db  58 3f b9 80  2f 3a 1c 98  fc 1e 46 8c
|   dc 93 ee 6c  ec df 40 4d  3d 08 d7 ed  92 6b d5 f8
|   9f 6c f9 41  2f 99 27 d2  2e 5b a5 77  5a 93 b6 3f
| data being hmac:  80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   2e 20 23 20  00 00 00 01  00 00 01 c0  24 00 01 a4
|   80 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
|   eb ff 97 78  70 72 7e b3  64 db c7 fe  e4 69 0f 92
|   2a dd bb d8  41 fc d0 3e  5c 5a 07 57  fd e7 7d 8a
|   c1 fc 19 db  f7 a0 0a 58  95 e0 43 74  1f 5e e0 33
|   f2 06 29 c9  8d 3e 52 00  37 22 20 6c  47 af 94 1c
|   6a 93 b3 97  1f ff 5c 1b  70 b3 48 6a  c7 5f 27 b3
|   e4 bf e1 17  0e 15 c1 47  77 7b 53 88  6c 4a cb 12
|   d0 82 94 13  cf 66 cc 4c  d8 b2 8e c1  39 07 b9 a5
|   12 f6 e0 69  cb ad 11 c1  e9 58 33 21  a8 bb a9 ec
|   40 9e ba 01  5c 8d e8 04  ac b9 22 b2  c6 ce c8 a9
|   79 a2 02 52  da d8 f7 41  ae 9c 82 85  5f f2 f5 a3
|   3f f7 09 de  d6 e7 31 43  51 69 8f 8d  fa 0b 41 e6
|   d8 07 00 68  9e b7 92 3d  47 93 37 e6  14 e0 48 0d
|   bb 1d 13 08  66 5d 87 c4  86 8a 38 f3  05 57 97 5c
|   e1 dc 5c ac  36 b4 e1 93  68 57 da 98  6c 69 99 c3
|   2a b8 60 09  8f 1f d2 d0  27 0b e5 b8  bf 6b e2 83
|   5d af f9 88  7c 09 47 32  c7 c7 72 61  b0 29 20 0b
|   a1 79 22 95  8b 5f 46 ab  30 48 6c 4f  21 93 99 84
|   a4 de 9a eb  10 24 61 19  27 da 8a 9b  ff 3f 7f 85
|   a9 c0 18 f9  23 6d e0 32  33 ca 20 5b  5c dc 26 0c
|   66 92 c6 6b  e1 c9 ee ff  d8 d0 41 97  7e b6 6e be
|   af f6 9e 38  bd 3e 93 ae  c9 73 2e 3e  f5 ed 42 24
|   f6 4f a7 db  58 3f b9 80  2f 3a 1c 98  fc 1e 46 8c
|   dc 93 ee 6c  ec df 40 4d  3d 08 d7 ed  92 6b d5 f8
|   9f 6c f9 41  2f 99 27 d2  2e 5b a5 77  5a 93 b6 3f
| out calculated auth:
|   ed 0d 10 07  2c ed 0c ad  25 c2 16 b2  1f 71 09 d6
| #2 complete v2 state transition with STF_OK
./cryptoR2 transition from state STATE_PARENT_R1 to state STATE_PARENT_R2
| v2_state_transition: st is #2; pst is #1; transition_st is #1
./cryptoR2 STATE_PARENT_R2: received v2I2, PARENT SA established {auth=IKEv2 oursig=fakesig1 theirsig=fakecheck cipher=aes_128 integ=sha256_128 prf=prf-hmac-sha2-256 group=modp2048} (msgid: 00000001/00000001)
./cryptoR2 negotiated tunnel [fd68:c9f9:4157::,fd68:c9f9:4157:0:ffff:ffff:ffff:ffff proto:0 port:0-65535] -> [fd68:c9f9:4157:2:0:1::,fd68:c9f9:4157:2:0:1:ffff:ffff proto:0 port:0-65535]
./cryptoR2 STATE_CHILD_C1_KEYED: CHILD SA established tunnel mode {ESP=>0x12345678 <0x12345678 xfrm=aes_cbc[128]-hmac_sha2_256_128 NATOA=none NATD=none DPD=none}
| sending reply packet to 192.168.1.1:500 (from port 500)
sending 448 bytes for STATE_PARENT_R1 through eth0:500 [132.213.238.7:500] to 192.168.1.1:500 (using #2)
|   80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   2e 20 23 20  00 00 00 01  00 00 01 c0  24 00 01 a4
|   80 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
|   eb ff 97 78  70 72 7e b3  64 db c7 fe  e4 69 0f 92
|   2a dd bb d8  41 fc d0 3e  5c 5a 07 57  fd e7 7d 8a
|   c1 fc 19 db  f7 a0 0a 58  95 e0 43 74  1f 5e e0 33
|   f2 06 29 c9  8d 3e 52 00  37 22 20 6c  47 af 94 1c
|   6a 93 b3 97  1f ff 5c 1b  70 b3 48 6a  c7 5f 27 b3
|   e4 bf e1 17  0e 15 c1 47  77 7b 53 88  6c 4a cb 12
|   d0 82 94 13  cf 66 cc 4c  d8 b2 8e c1  39 07 b9 a5
|   12 f6 e0 69  cb ad 11 c1  e9 58 33 21  a8 bb a9 ec
|   40 9e ba 01  5c 8d e8 04  ac b9 22 b2  c6 ce c8 a9
|   79 a2 02 52  da d8 f7 41  ae 9c 82 85  5f f2 f5 a3
|   3f f7 09 de  d6 e7 31 43  51 69 8f 8d  fa 0b 41 e6
|   d8 07 00 68  9e b7 92 3d  47 93 37 e6  14 e0 48 0d
|   bb 1d 13 08  66 5d 87 c4  86 8a 38 f3  05 57 97 5c
|   e1 dc 5c ac  36 b4 e1 93  68 57 da 98  6c 69 99 c3
|   2a b8 60 09  8f 1f d2 d0  27 0b e5 b8  bf 6b e2 83
|   5d af f9 88  7c 09 47 32  c7 c7 72 61  b0 29 20 0b
|   a1 79 22 95  8b 5f 46 ab  30 48 6c 4f  21 93 99 84
|   a4 de 9a eb  10 24 61 19  27 da 8a 9b  ff 3f 7f 85
|   a9 c0 18 f9  23 6d e0 32  33 ca 20 5b  5c dc 26 0c
|   66 92 c6 6b  e1 c9 ee ff  d8 d0 41 97  7e b6 6e be
|   af f6 9e 38  bd 3e 93 ae  c9 73 2e 3e  f5 ed 42 24
|   f6 4f a7 db  58 3f b9 80  2f 3a 1c 98  fc 1e 46 8c
|   dc 93 ee 6c  ec df 40 4d  3d 08 d7 ed  92 6b d5 f8
|   9f 6c f9 41  2f 99 27 d2  2e 5b a5 77  5a 93 b6 3f
|   ed 0d 10 07  2c ed 0c ad  25 c2 16 b2  1f 71 09 d6
| releasing whack for #X (sock=Y)
| releasing whack for #X (sock=Y)
./cryptoR2 leak: reply packet, item size: X
./cryptoR2 leak: skeyseed_t1, item size: X
./cryptoR2 leak: responder keys, item size: X
./cryptoR2 leak: initiator keys, item size: X
./cryptoR2 leak: alg_info_esp, item size: X
./cryptoR2 leak: db_context->attrs, item size: X
./cryptoR2 leak: db_context->trans, item size: X
./cryptoR2 leak: 2 * db_context->conj, item size: X
./cryptoR2 leak: v2 policy database, item size: X
./cryptoR2 leak: st_nr in duplicate_state, item size: X
./cryptoR2 leak: st_ni in duplicate_state, item size: X
./cryptoR2 leak: st_skey_pr in duplicate_state, item size: X
./cryptoR2 leak: st_skey_pi in duplicate_state, item size: X
./cryptoR2 leak: st_skey_er in duplicate_state, item size: X
./cryptoR2 leak: st_skey_ei in duplicate_state, item size: X
./cryptoR2 leak: st_skey_ar in duplicate_state, item size: X
./cryptoR2 leak: st_skey_ai in duplicate_state, item size: X
./cryptoR2 leak: st_skey_d in duplicate_state, item size: X
./cryptoR2 leak: st_skeyseed in duplicate_state, item size: X
./cryptoR2 leak: st_enc_key in duplicate_state, item size: X
./cryptoR2 leak: struct state in new_state(), item size: X
./cryptoR2 leak: ikev2_inI2outR2 KE, item size: X
./cryptoR2 leak: alg_info_ike, item size: X
./cryptoR2 leak: ikev2_inI1outR1 KE, item size: X
./cryptoR2 leak: msg_digest, item size: X
./cryptoR2 leak: 2 * keep id name, item size: X
./cryptoR2 leak: ID host_pair, item size: X
./cryptoR2 leak: host_pair, item size: X
./cryptoR2 leak: host ip, item size: X
./cryptoR2 leak: keep id name, item size: X
./cryptoR2 leak: host ip, item size: X
./cryptoR2 leak: keep id name, item size: X
./cryptoR2 leak: connection name, item size: X
./cryptoR2 leak: struct connection, item size: X
./cryptoR2 leak: keep id name, item size: X
./cryptoR2 leak: pubkey entry, item size: X
./cryptoR2 leak: rfc3110 format of public key, item size: X
./cryptoR2 leak: pubkey, item size: X
./cryptoR2 leak: keep id name, item size: X
./cryptoR2 leak: pubkey entry, item size: X
./cryptoR2 leak: rfc3110 format of public key, item size: X
./cryptoR2 leak: pubkey, item size: X
./cryptoR2 leak: 2 * id list, item size: X
./cryptoR2 leak: rfc3110 format of public key [created], item size: X
./cryptoR2 leak: pubkey, item size: X
./cryptoR2 leak: secret, item size: X
./cryptoR2 leak: 3 * hasher name, item size: X
./cryptoR2 leak: 10 * group description, item size: X
./cryptoR2 leak: policies path, item size: X
./cryptoR2 leak: ocspcerts path, item size: X
./cryptoR2 leak: aacerts path, item size: X
./cryptoR2 leak: certs path, item size: X
./cryptoR2 leak: private path, item size: X
./cryptoR2 leak: crls path, item size: X
./cryptoR2 leak: cacert path, item size: X
./cryptoR2 leak: acert path, item size: X
./cryptoR2 leak: default conf var_dir, item size: X
./cryptoR2 leak: default conf conffile, item size: X
./cryptoR2 leak: default conf ipsecd_dir, item size: X
./cryptoR2 leak: default conf ipsec_conf_dir, item size: X
./cryptoR2 leak detective found Z leaks, total size X
Pre-amble (offset: X): #!-pluto-whack-file- recorded on FOO
